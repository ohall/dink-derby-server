openapi: 3.0.0
info:
  title: Dink Derby API
  description: A REST API for managing users, derbies, catches, and fishing locations in a fishing competition system.
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /api/users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '200':
          description: User updated
    delete:
      summary: Delete a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
  /api/derbies:
    get:
      summary: Get all derbies
      responses:
        '200':
          description: A list of derbies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Derby'
    post:
      summary: Create a new derby
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDerby'
      responses:
        '201':
          description: Derby created
  /api/derbies/{id}/catches:
    get:
      summary: Get all catches in a derby
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of catches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catch'

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
    NewUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    Derby:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
    NewDerby:
      type: object
      properties:
        name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
    Catch:
      type: object
      properties:
        _id:
          type: string
        species:
          type: string
        weight:
          type: number
        location:
          $ref: '#/components/schemas/Location'
    Location:
      type: object
      properties:
        location_id:
          type: string
        name:
          type: string
